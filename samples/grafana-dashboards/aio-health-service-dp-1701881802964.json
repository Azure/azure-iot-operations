{
  "__inputs": [
    {
      "name": "DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST",
      "label": "Managed_Prometheus_jajens-azmonworkspace-test",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "DS_EXPRESSION",
      "label": "Expression",
      "description": "",
      "type": "datasource",
      "pluginId": "__expr__"
    },
    {
      "name": "DS_AZURE_MONITOR",
      "label": "Azure Monitor",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-azure-monitor-datasource",
      "pluginName": "Azure Monitor"
    },
    {
      "name": "VAR_COMPONENT",
      "type": "constant",
      "label": "component",
      "value": "^(bf-|bluefin-|aio-dp-|dp-).*",
      "description": ""
    },
    {
      "name": "VAR_COMPONENT_TEXT",
      "type": "constant",
      "label": "component_text",
      "value": "Data Processor",
      "description": ""
    },
    {
      "name": "VAR_AIO_DP_SELF_TEST_PIPELINE",
      "type": "constant",
      "label": "aio_dp_self_test_pipeline",
      "value": ".*self-test.*",
      "description": ""
    },
    {
      "name": "VAR_LATENCY_PERCENTILE",
      "type": "constant",
      "label": "latency_percentile",
      "value": "0.95",
      "description": ""
    },
    {
      "name": "VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD",
      "type": "constant",
      "label": "aio_dp_nats_utilization_threshold",
      "value": "0.90",
      "description": ""
    },
    {
      "name": "VAR_AIO_DP_LATENCY_THRESHOLD_MS",
      "type": "constant",
      "label": "aio_dp_latency_threshold_ms",
      "value": "1000",
      "description": ""
    },
    {
      "name": "VAR_AIO_DP_ERROR_RATE",
      "type": "constant",
      "label": "aio_dp_error_rate",
      "value": "0.05",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "datasource",
      "id": "__expr__",
      "version": "1.0.0"
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.5.13"
    },
    {
      "type": "datasource",
      "id": "grafana-azure-monitor-datasource",
      "name": "Azure Monitor",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 8,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#283747\">\n  <span style=\"color:#FFFFF8; font-size:28px\">Azure Edge Services - ${component_text} Health</span>\n</div>",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "refId": "A"
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 76,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Scenario Health (SLO/RUM) related to ${component_text}</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "This represents the health of the Data Processor's Service Level Objective (SLO):\n\n<span style=\"color:green;\">Green</span> shows a healthy state, <span style=\"color:red;\">red</span> indicates an unhealthy state, and transparency represents the absence of data.\n\n<span style=\"font-weight:bold;\">Pipeline Heartbeats</span>. This metric signifies the successful passage of heartbeats through each pipeline, ensuring the continuous flow of data, guaranteeing the basic functionality of pipelines.\n\n<span style=\"font-weight:bold;\">Pipeline Internal Latency</span>. This metric measures the total latency within pipelines, excluding any latency introduced by external calls. The latency threshold of 1000ms is set in Grafana variables.\n\n<span style=\"font-weight:bold;\">Pipeline Success Rate</span>. This performance indicator is calculated as the ratio between the total number of errors and the total number of messages processed across all pipelines. The error rate threshold of 5% is set in Grafana variables.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 60,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "green",
                "value": 1
              },
              {
                "color": "text",
                "value": 404
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Pipeline Heartbeats"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels._}",
                    "url": "d/e7f4802e-d73b-4f06-a84c-715cdc42fb36/aio-health-service-dp?${__all_variables}&${__url_time_range}&viewPanel=87"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Pipeline Internal Latency"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels._}",
                    "url": "d/e7f4802e-d73b-4f06-a84c-715cdc42fb36/aio-health-service-dp?${__all_variables}&${__url_time_range}&viewPanel=93"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Pipeline Success Rate"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels._}",
                    "url": "d/e7f4802e-d73b-4f06-a84c-715cdc42fb36/aio-health-service-dp?${__all_variables}&${__url_time_range}&viewPanel=95"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "id": 64,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.8,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(min(\r\n    label_replace(\r\n        (\r\n            sgn(\r\n                (\r\n                    sum(increase(aio_dp_reader_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n                    sum(increase(aio_dp_stage_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n                ) / \r\n                (\r\n                    sum(increase(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n                    sum(increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n                )\r\n                > $aio_dp_error_rate\r\n            ) - 1\r\n            or\r\n            sgn(\r\n                sum(increase(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n                sum(increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n                > 0\r\n            )\r\n            or vector(404)\r\n        )\r\n        ,\"_\",\"Pipeline Success Rate\",\"\",\"\")\r\n    or\r\n    label_replace(\r\n        (min(\r\n            sgn(\r\n                max(\r\n                    histogram_quantile(0.95, rate(aio_dp_pipeline_latency_bucket{cluster=\"$cluster\"}[$__rate_interval]))\r\n                    ) < $aio_dp_latency_threshold_ms\r\n                )\r\n            or\r\n            1 - sgn(\r\n                    max(\r\n                        histogram_quantile(0.95, rate(aio_dp_pipeline_latency_bucket{cluster=\"$cluster\"}[$__rate_interval]))\r\n                    ) >= $aio_dp_latency_threshold_ms\r\n                )\r\n        ) \r\n        or vector(404))\r\n        ,\"_\",\"Pipeline Internal Latency\",\"\",\"\")\r\n    or        \r\n    label_replace(\r\n        (\r\n            min(\r\n                sgn(\r\n                    sum(rate(aio_dp_reader_processed_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                    >= sum(rate(aio_dp_reader_incoming_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                )\r\n                or\r\n                sgn(\r\n                    sum(rate(aio_dp_stage_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                    >= sum(rate(aio_dp_reader_processed_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                )\r\n            )\r\n            or vector(404))\r\n    ,\"_\",\"Pipeline Heartbeats\",\"\",\"\")\r\n    # or\r\n    # label_replace(\r\n    #     (\r\n    #         sgn(\r\n    #             sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=\"$cluster\"}) > 0\r\n    #             and\r\n    #             (sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=\"$cluster\"}) / \r\n    #             sum by(server_id)(nats_varz_jetstream_config_max_storage{cluster=\"$cluster\"}))\r\n    #             <= $aio_dp_nats_utilization_threshold\r\n    #         )\r\n    #     or vector(404))\r\n    # ,\"_\",\"Message Store\",\"\",\"\")\r\n),\"_\",\"Data Processor Health\",\"\",\"\")",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    (\r\n        sgn(\r\n            (\r\n                sum(increase(aio_dp_reader_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n                sum(increase(aio_dp_stage_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n            ) / \r\n            (\r\n                sum(increase(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n                sum(increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n            )\r\n            > $aio_dp_error_rate\r\n        ) - 1\r\n        or\r\n        sgn(\r\n            sum(increase(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + \r\n            sum(increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))\r\n            > 0\r\n        )\r\n        or vector(404)\r\n    )\r\n    ,\"_\",\"Pipeline Success Rate\",\"\",\"\")\r\nor\r\nlabel_replace(\r\n    (min(\r\n        sgn(\r\n            max(\r\n                histogram_quantile(0.95, rate(aio_dp_pipeline_latency_bucket{cluster=\"$cluster\"}[$__rate_interval]))\r\n                ) < $aio_dp_latency_threshold_ms\r\n            )\r\n        or\r\n        1 - sgn(\r\n                max(\r\n                    histogram_quantile(0.95, rate(aio_dp_pipeline_latency_bucket{cluster=\"$cluster\"}[$__rate_interval]))\r\n                ) >= $aio_dp_latency_threshold_ms\r\n            )\r\n    ) \r\n    or vector(404))\r\n    ,\"_\",\"Pipeline Internal Latency\",\"\",\"\")\r\nor        \r\nlabel_replace(\r\n    (\r\n        min(\r\n            sgn(\r\n                sum(rate(aio_dp_reader_processed_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                >= sum(rate(aio_dp_reader_incoming_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n            )\r\n            or\r\n            sgn(\r\n                sum(rate(aio_dp_stage_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n                >= sum(rate(aio_dp_reader_processed_heartbeats{cluster=\"$cluster\"}[$__rate_interval]))\r\n            )\r\n        )\r\n        or vector(404))\r\n,\"_\",\"Pipeline Heartbeats\",\"\",\"\")",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Service Level Objectives",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "orange",
                "value": 100
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 6,
        "x": 12,
        "y": 4
      },
      "id": 66,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "avg_over_time((histogram_quantile(0.95, sum(rate(aio_dp_pipeline_internal_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (le, pipeline_id)) >= 0)[$__range:])",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Pipeline Internal Latency",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "noValue": "No Errors 🎉",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "stage_error"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reader_error"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 6,
        "x": 18,
        "y": 4
      },
      "id": 88,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(aio_dp_stage_errors{cluster=\"$cluster\"}[$__rate_interval]))",
          "hide": false,
          "legendFormat": "stage_error",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(rate(aio_dp_reader_errors{cluster=\"$cluster\"}[$__rate_interval]))",
          "hide": false,
          "legendFormat": "reader_error",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Pipeline Error Rate",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 84,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Pipelines</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 60,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [],
          "mappings": [
            {
              "options": {
                "NaN": {
                  "index": 0,
                  "text": "0"
                }
              },
              "type": "value"
            }
          ],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "green",
                "value": 1
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels.pipeline_id} ",
                    "url": "d/4f637c27-a19f-489e-a4af-719f1baa0a19/aio-service-dp-pipeline?${__all_variables}﻿&﻿${__url_time_range}&var-pipeline=${__field.labels.cloud_resource_id}"
                  }
                ]
              },
              {
                "id": "displayName",
                "value": "${__field.labels.pipeline_id}"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 93,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.8,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "histogram_quantile(0.95, sum(rate(aio_dp_pipeline_internal_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (le, pipeline_id, cloud_resource_id))",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Internal Latency (by Pipeline)",
      "transformations": [],
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "transparent",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "mode": "basic",
              "type": "color-background"
            },
            "filterable": true,
            "inspect": true
          },
          "mappings": [],
          "noValue": "-",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Stage Errors"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "semi-dark-yellow",
                      "value": 1
                    },
                    {
                      "color": "semi-dark-red",
                      "value": 10
                    }
                  ]
                }
              },
              {
                "id": "color"
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Checkpoint Size"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Internal Latency (P95)"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "light-green",
                      "value": 1
                    },
                    {
                      "color": "semi-dark-yellow",
                      "value": 100
                    },
                    {
                      "color": "semi-dark-red",
                      "value": 1000
                    }
                  ]
                }
              },
              {
                "id": "color"
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.width",
                "value": 184
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Internal  Latency (P99)"
            },
            "properties": [
              {
                "id": "color"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "light-green",
                      "value": 1
                    },
                    {
                      "color": "semi-dark-yellow",
                      "value": 100
                    },
                    {
                      "color": "semi-dark-red",
                      "value": 1000
                    }
                  ]
                }
              },
              {
                "id": "unit",
                "value": "ms"
              },
              {
                "id": "custom.width",
                "value": 183
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cloud_resource_id"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Reader Errors"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "transparent",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 1
                    },
                    {
                      "color": "red",
                      "value": 10
                    }
                  ]
                }
              },
              {
                "id": "color"
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Input Messages"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "continuous-blues"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Output Messages"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "continuous-blues"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Errors"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "light-green",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 100
                    },
                    {
                      "color": "red",
                      "value": 200
                    }
                  ]
                }
              },
              {
                "id": "color"
              },
              {
                "id": "custom.width",
                "value": 134
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Pipeline Name"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "d/4f637c27-a19f-489e-a4af-719f1baa0a19/aio-service-dp-pipeline?${__all_variables}&${__url_time_range}&var-pipeline=${__data.fields.cloud_resource_id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 79,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_stage_outgoing_messages{cluster=\"$cluster\",stage_type=~\"messagestore/.*\"}[$__range])) by (pipeline_id, cloud_resource_id)",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\",stage_type=~\"output/.*\"}[$__range])) by (pipeline_id)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_stage_errors{cluster=\"$cluster\"}[$__range])) by (pipeline_id)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "avg_over_time((histogram_quantile(0.95, sum(rate(aio_dp_pipeline_internal_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (le, pipeline_id)) >= 0)[$__range:])",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "avg_over_time((histogram_quantile(0.99, sum(rate(aio_dp_pipeline_internal_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (le, pipeline_id)) >= 0)[$__range:])",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_stage_heartbeats{cluster=\"$cluster\"}[$__range])) by (pipeline_id)",
          "format": "table",
          "hide": true,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "avg by(pipeline_id) (aio_dp_runner_checkpoint_size{cluster=\"$cluster\"})",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_reader_errors{cluster=\"$cluster\"}[$__range])) by (pipeline_id)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "H"
        }
      ],
      "title": "Pipeline Health",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Input Messages",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Output Messages",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #B"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Stage Errors",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #C"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "disabled": true,
          "id": "calculateField",
          "options": {
            "alias": "Heartbeats",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #F"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Checkpoint Size",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #G"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Reader Errors",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #H"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Errors",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Reader Errors",
                "Stage Errors"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "Value #A": true,
              "Value #B": true,
              "Value #C": true,
              "Value #F": true,
              "Value #G": true,
              "Value #H": true,
              "cloud_resource_id": false
            },
            "indexByName": {
              "Checkpoint Size": 13,
              "Errors": 8,
              "Heartbeats": 12,
              "Input Messages": 9,
              "Output Messages": 10,
              "Reader Errors": 17,
              "Stage Errors": 16,
              "Time": 1,
              "Value #A": 2,
              "Value #B": 3,
              "Value #C": 4,
              "Value #D": 5,
              "Value #E": 6,
              "Value #F": 7,
              "Value #G": 11,
              "Value #H": 15,
              "cloud_resource_id": 14,
              "pipeline_id": 0
            },
            "renameByName": {
              "Value #A": "",
              "Value #C": "",
              "Value #D": "Internal Latency (P95)",
              "Value #E": "Internal  Latency (P99)",
              "cloud_resource_id": "",
              "pipeline_id": "Pipeline Name"
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "P95 Latency"
              }
            ]
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 60,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [],
          "mappings": [
            {
              "options": {
                "NaN": {
                  "index": 0,
                  "text": "No Data"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.displayName} ",
                    "url": "d/4f637c27-a19f-489e-a4af-719f1baa0a19/aio-service-dp-pipeline?var-pipeline=${__field.name}﻿&${__all_variables}﻿&﻿${__url_time_range}\t"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 95,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.8,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum by (le, pipeline_id, cloud_resource_id) (increase(aio_dp_reader_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + sum by (le, pipeline_id, cloud_resource_id) (increase(aio_dp_stage_errors{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))",
          "format": "time_series",
          "hide": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum by (le, pipeline_id, cloud_resource_id) (increase(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0)) + sum by (le, pipeline_id, cloud_resource_id) (increase(aio_dp_stage_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]) or vector(0))",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "__expr__",
            "uid": "${DS_EXPRESSION}"
          },
          "expression": "$A / $B > $aio_dp_error_rate",
          "hide": false,
          "refId": "C",
          "type": "math"
        }
      ],
      "title": "Success Rate (by Pipeline)",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "cloud_resource_id"
            ],
            "mode": "columns",
            "valueLabel": "cloud_resource_id"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "C": true,
              "cloud_resource_id": false,
              "pipeline_id": true
            },
            "indexByName": {},
            "renameByName": {
              "opcua-pipeline-agg": ""
            }
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": ".*/([^/]+)$",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 32
      },
      "id": 80,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Stages & Others</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 34
      },
      "id": 90,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "count(count by (cloud_resource_id, stage_id) (rate(aio_dp_stage_info{cluster=\"$cluster\"}[$__rate_interval])))",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Stage Count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Total count of enriched messages across the cluster.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 34
      },
      "id": 73,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(aio_dp_enrich_latency_count{cluster=\"$cluster\"})",
          "instant": false,
          "interval": "",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Enriched Message Count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Enrichment latency broken down by pipeline.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "refdata-enrich"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 5,
        "x": 8,
        "y": 34
      },
      "id": 75,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(aio_dp_enrich_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (pipeline_id)",
          "interval": "",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Reference Data Enrichment Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Heartbeat solely provide a count of how many times a heartbeat traverses each stage in the pipeline, with the count being higher for pipelines with more runners and stages, and they do not convey any additional health-related information about the system.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "opcua-pipeline-agg"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "self-test-pipeline"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 13,
        "y": 34
      },
      "id": 87,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(increase(aio_dp_stage_heartbeats{cluster=\"$cluster\"}[$__rate_interval])) by (le, pipeline_id)",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Heartbeat Count",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 38
      },
      "id": 89,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "count(count by (cloud_resource_id, runner_partition) (rate(aio_dp_runner_info{cluster=\"$cluster\"}[$__rate_interval])))",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Runner Count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 38
      },
      "id": 74,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "count(count by(enrich_datasetid, cluster) (aio_dp_refdata_global_store_get_latency_count{cluster=\"$cluster\"}))",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Reference Data Store Count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "No Errors 🎉",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1e-13
              }
            ]
          },
          "unit": "err/s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 5,
        "x": 8,
        "y": 38
      },
      "id": 86,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 30
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(rate(aio_dp_runner_checkpoint_error{cluster=\"$cluster\"}[$__rate_interval]))",
          "legendFormat": "{{label_name}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Checkpointing Errors",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value"
              ],
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 85,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Self-test Pipeline</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 60,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#7f7f7f"
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              },
              {
                "color": "#7f7f7f",
                "value": 404
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test input (MQ)"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Show details from the MQ Service Health dashboard",
                    "url": "/d/e2e98c97-7655-44d1-b8f3-5008b7f6ffbb/aio-health-service-mq?${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Store Utilization"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Show details from the DP message store dashboard",
                    "url": "/d/e17d0b7f-9771-4cb8-adf9-56cbaef3fff6/aio-service-dp-messagestore?${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test stage errors"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels._}",
                    "url": "/d/e6d7cca2-c5a9-4917-bf3b-43634132f009/aio-service-dp-stage?${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test pipeline latency"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Click for details on ${__field.labels._}",
                    "url": "/d/4f637c27-a19f-489e-a4af-719f1baa0a19/aio-service-dp-pipeline?${__all_variables}&${__url_time_range}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 44
      },
      "id": 16,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.8,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(min(\r\n    label_replace(\r\n        (min(sgn(rate(\r\n            aio_dp_reader_incoming_messages{cluster=\"$cluster\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval]\r\n            )*60)) or vector(-1))\r\n        ,\"_\",\"Self-test Input\",\"\",\"\") or\r\n    label_replace(\r\n        (min(\r\n            0 * sgn(0 < round(sum(increase(aio_dp_stage_errors{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval])))) or\r\n            1 * sgn(aio_dp_stage_incoming_messages{cluster=\"$cluster\", stage_type=~\"output/.*\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}) or\r\n            vector(0)>0\r\n        ) or vector(404))\r\n        ,\"_\",\"Self-test Stage Errors\",\"\",\"\") or\r\n    label_replace(\r\n        (min(sgn(rate(\r\n            aio_dp_stage_incoming_messages{cluster=\"$cluster\", stage_type=~\"output/.*\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval]\r\n            )*60)) or vector(-1))\r\n        ,\"_\",\"Self-test Output\",\"\",\"\") or\r\n    label_replace(\r\n        (min(\r\n            1 * sgn(max(histogram_quantile(0.95, rate(\r\n                aio_dp_pipeline_latency_bucket{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n                ))) < $aio_dp_latency_threshold_ms) or\r\n            0 * sgn(max(histogram_quantile(0.95, rate(\r\n                aio_dp_pipeline_latency_bucket{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n                ))) >= $aio_dp_latency_threshold_ms) or\r\n            vector(0)>0\r\n        ) or vector(404))\r\n        ,\"_\",\"Self-test Pipeline Latency\",\"\",\"\") or \r\n    # label_replace(label_replace(\r\n    #     (min(\r\n    #         0 * sgn(max(\r\n    #             100 * sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=\"$cluster\"})\r\n    #             / sum by(server_id)(nats_varz_jetstream_config_max_storage{cluster=\"$cluster\"})\r\n    #             ) > 90) or\r\n    #         1 * sgn(max(\r\n    #             100 * sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=\"$cluster\"})\r\n    #             / sum by(server_id)(nats_varz_jetstream_config_max_storage{cluster=\"$cluster\"})\r\n    #             ) <= 90) or\r\n    #         vector(0)>0\r\n    #     ) or vector(404))\r\n    #     ,\"url\",\"/d/e17d0b7f-9771-4cb8-adf9-56cbaef3fff6/aio-service-dp-messagestore\",\"\",\"\")\r\n    #     ,\"_\",\"Store Utilization\",\"\",\"\") or \r\n    vector(0)>0\r\n),\"_\",\"Self-test Pipeline Health\",\"\",\"\")",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#label_replace(min(\r\n    label_replace(\r\n        (min(sgn(rate(\r\n            aio_dp_reader_incoming_messages{cluster=\"$cluster\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval]\r\n            )*60)) or vector(-1))\r\n        ,\"_\",\"Self-test Input\",\"\",\"\") or\r\n    label_replace(\r\n        (min(\r\n            0 * sgn(0 < round(sum(increase(aio_dp_stage_errors{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval])))) or\r\n            1 * sgn(aio_dp_stage_incoming_messages{cluster=\"$cluster\", stage_type=~\"output/.*\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}) or\r\n            vector(0)>0\r\n        ) or vector(404))\r\n        ,\"_\",\"Self-test Stage Errors\",\"\",\"\") or\r\n    label_replace(\r\n        (min(sgn(rate(\r\n            aio_dp_stage_incoming_messages{cluster=\"$cluster\", stage_type=~\"output/.*\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval]\r\n            )*60)) or vector(-1))\r\n        ,\"_\",\"Self-test Output\",\"\",\"\") or\r\n    label_replace(\r\n        (min(\r\n            1 * sgn(max(histogram_quantile(0.95, rate(\r\n                aio_dp_pipeline_latency_bucket{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n                ))) < $aio_dp_latency_threshold_ms) or\r\n            0 * sgn(max(histogram_quantile(0.95, rate(\r\n                aio_dp_pipeline_latency_bucket{cluster=\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n                ))) >= $aio_dp_latency_threshold_ms) or\r\n            vector(0)>0\r\n        ) or vector(404))\r\n        ,\"_\",\"Self-test Pipeline Latency\",\"\",\"\") or \r\n    # label_replace(label_replace(\r\n    #     (min(\r\n    #         0 * sgn(max(\r\n    #             100 * sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=~\"$cluster\"})\r\n    #             / sum by(server_id)(nats_varz_jetstream_config_max_storage{cluster=~\"$cluster\"})\r\n    #             ) > 90) or\r\n    #         1 * sgn(max(\r\n    #             100 * sum by(server_id)(nats_varz_jetstream_stats_storage{cluster=~\"$cluster\"})\r\n    #             / sum by(server_id)(nats_varz_jetstream_config_max_storage{cluster=~\"$cluster\"})\r\n    #             ) <= 90) or\r\n    #         vector(0)>0\r\n    #     ) or vector(404))\r\n    #     ,\"url\",\"/d/e17d0b7f-9771-4cb8-adf9-56cbaef3fff6/aio-service-dp-messagestore\",\"\",\"\")\r\n    #     ,\"_\",\"Store Utilization\",\"\",\"\") or \r\n    vector(0)>0\r\n#),\"_\",\"Self-test Pipeline Health\",\"\",\"\")",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Self-test Pipeline Health",
      "transformations": [],
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Click for Data Processor details",
              "url": "/d/e57b7777-71be-43a8-87bd-d917391b154f/aio-service-dp-overview?${__all_variables}&${__url_time_range}"
            }
          ],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent"
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "hidden-timeline"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test Latency Threshold"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test pipeline latency over threshold"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 3
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 44
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    max(histogram_quantile(0.95, rate(\r\n    aio_dp_pipeline_latency_bucket{cluster=~\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n    )))\r\n    ,\"_\",\"Self-test Pipeline Latency\",\"\",\"\") or\r\nlabel_replace($aio_dp_latency_threshold_ms * sgn(\r\n    max(histogram_quantile(0.95, rate(\r\n    aio_dp_pipeline_latency_bucket{cluster=~\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n    )))\r\n    ),\"_\",\"Self-test Latency Threshold\",\"\",\"\") or\r\nlabel_replace(label_replace(\r\n    max(histogram_quantile(0.95, rate(\r\n    aio_dp_pipeline_latency_bucket{cluster=~\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[5m]\r\n    ))) >= $aio_dp_latency_threshold_ms\r\n    ,\"x\",\"Over threshold\",\"\",\"\")\r\n    ,\"_\",\"Self-test pipeline latency over threshold\",\"\",\"\") or\r\nlabel_replace(vector(0),\"_\",\"hidden-timeline\",\"\",\"\") or\r\nvector(0)>0",
          "hide": false,
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Self-test Pipeline Latency",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Click for Data Processor details",
              "url": "/d/e57b7777-71be-43a8-87bd-d917391b154f/aio-service-dp-overview?${__all_variables}&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "yellow",
                "value": 0.8
              },
              {
                "color": "dark-green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test error rate"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.lineWidth",
                "value": 3
              },
              {
                "id": "custom.fillOpacity",
                "value": 5
              },
              {
                "id": "custom.pointSize",
                "value": 5
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    0,
                    5
                  ],
                  "fill": "dot"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Self-test output (msgs/min)"
            },
            "properties": [
              {
                "id": "custom.axisSoftMax",
                "value": 3
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "color": "#808080",
                        "index": 0
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 44
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "asc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "    label_replace(\r\n            max(round(rate(\r\n            aio_dp_stage_incoming_messages{cluster=~\"$cluster\", stage_type=~\"output/.*\", cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval]\r\n            )*60))\r\n        ,\"_\",\"Self-test Output (msgs/min)\",\"\",\"\") or\r\n    label_replace(\r\n            0 < round(sum(increase(aio_dp_stage_errors{cluster=~\"$cluster\",cloud_resource_id=~\"$aio_dp_self_test_pipeline\"}[$__rate_interval])))\r\n        ,\"_\",\"Self-test Error Rate\",\"\",\"\")",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Self-test Number of Output and Errors",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 52
      },
      "id": 12,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Golden Metrics</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "refId": "A"
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [
            {
              "options": {
                "match": "null+nan",
                "result": {
                  "color": "transparent",
                  "index": 0
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*s$"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "custom.axisLabel",
                "value": "total count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*[/]sec[)]$"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "throughput (msgs/sec)"
              },
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 54
      },
      "id": 50,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(#quantile_over_time($latency_percentile,\r\n    sum(rate(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval]))\r\n    #[$latency_quantile_range:])\r\n    ,\"_\",\"Input (msgs/sec)\",\"\",\"\") or\r\nlabel_replace(#quantile_over_time($latency_percentile,\r\n    sum(rate(aio_dp_stage_incoming_messages{cluster=\"$cluster\",stage_type=~\"output/.*\"}[$__rate_interval]))\r\n    #[$latency_quantile_range:])\r\n    ,\"_\",\"Output (msgs/sec)\",\"\",\"\") or\r\nlabel_replace(\r\n    count(count by (cloud_resource_id, runner_partition) (rate(aio_dp_runner_info{cluster=\"$cluster\"}[$__rate_interval])))\r\n    ,\"_\",\"Runners (count)\",\"\",\"\") or\r\n# label_replace(vector(1),\"_\",\"TODO: Usage/Volume\",\"\",\"\") or\r\nvector(0) > 0",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Traffic (Input/Output/Runner)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 100
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 8,
        "y": 54
      },
      "id": 83,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "histogram_quantile(0.95, sum(rate(aio_dp_pipeline_latency_bucket{cluster=\"$cluster\"}[$__rate_interval])) by (le))",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Latency (P95)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": ".Success Rate"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 4
              },
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 101
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*(Errors)$"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.axisLabel",
                "value": "Error Count"
              },
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "custom.axisSoftMin",
                "value": 0
              },
              {
                "id": "custom.axisSoftMax",
                "value": 20
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 15,
        "y": 54
      },
      "id": 51,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    (  (sum(rate(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval])) > 0 or vector(0))\r\n      / (sum(rate(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval])) > 0 or vector(1))\r\n    ) and\r\n        (sum(rate(aio_dp_stage_incoming_messages{cluster=\"$cluster\",stage_type=~\"output/.*\"}[$__rate_interval])) > 0)\r\n    or  \r\n    (  (sum(rate(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval])) > 0 or vector(0))\r\n      / (sum(rate(aio_dp_reader_incoming_messages{cluster=\"$cluster\"}[$__rate_interval])) > 0 or vector(1))\r\n    ) >0 and\r\n        (sum(rate(aio_dp_stage_incoming_messages{cluster=\"$cluster\",stage_type=~\"output/.*\"}[$__rate_interval])) == 0) * 0\r\n    ,\"_\",\".Success Rate\",\"\",\"\") * 100 or\r\nlabel_replace(\r\n    sum(rate(aio_dp_stage_errors{cluster=\"$cluster\"}[$__rate_interval])) or vector(0)\r\n    ,\"_\",\"Stage Errors\",\"\",\"\") or\r\nlabel_replace(\r\nsum(rate(aio_dp_reader_errors{cluster=\"$cluster\"}[$__rate_interval])) or vector(0)\r\n    ,\"_\",\"Reader Errors\",\"\",\"\") or\r\n#label_replace(vector(1),\"_\",\"TODO: Success Rate\",\"\",\"\") or\r\nvector(0) > 0",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Success Rate/Errors",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "yellow",
                "value": 70
              },
              {
                "color": "orange",
                "value": 80
              },
              {
                "color": "red",
                "value": 90
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Unhealthy"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 20,
        "y": 54
      },
      "id": 62,
      "links": [],
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 40
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "100 * sum by(server_id)(aio_dp_msg_store_varz_jetstream_stats_storage{cluster=~\"$cluster\"}) / sum by(server_id)(aio_dp_msg_store_varz_jetstream_config_max_storage{cluster=~\"$cluster\"})",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Saturation (Message Store Usage)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 62
      },
      "id": 11,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Infrastructure Workload Health</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "refId": "A"
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Click for more details",
              "url": "/d/eef9bf1c-b27a-4e86-a7f0-2a39cdfbeeca/health-infrastructure?${__all_variables}&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 0,
        "y": 64
      },
      "id": 31,
      "links": [
        {
          "targetBlank": true,
          "title": "See infra workload health for all components",
          "url": "/d/E5cCeHj4z/health-infra-workload?${cluster:queryparam}&${__url_time_range}"
        }
      ],
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "## Workload Readiness health\r\n############################\r\nlabel_replace(min(\r\navg(label_join( # Workload ready percents (for deployment, daemonset, and statefulset)\r\n    label_replace(label_join(\r\n        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} or\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} or\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"statefulset\")\r\n        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_status_.*\")\r\n  / label_replace(label_join(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} or\r\n        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} or\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"statefulset\")\r\n        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_(status|spec)_.*\")\r\n  ,\"workload\", \":\", \"workloadType\", \"workloadName\")\r\n) by (workload) >=0 \r\n) or vector(0),\"_\",\"Workload Readiness\",\"\",\"\")",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "## Container Restart Health:\r\n############################\r\nlabel_replace(\r\n  sgn(sum_over_time(sum(rate(\r\n    kube_pod_container_status_restarts_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\"}[10m:1m]\r\n    )*60)[1h:]) > 5) * 0.0 # RED: Cumulative restarts over X(5) time greater than Y(1h)\r\n  or (max(rate(\r\n    kube_pod_container_status_restarts_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\"}[5m:1m]\r\n    )*60*5) > 0) * 0.5 # YELLOW: restarts detected but below Red threshold\r\n  or sgn(max(\r\n    kube_pod_container_status_restarts_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\"}\r\n    + 1 >= 0))\r\n  #or vector(1) # Healthy\r\n  ,\"_\",\"Container Restart Health\",\"\",\"\")\r\n## uncomment below to t-shoot this health metric\r\n# or label_replace(sum_over_time(sum(rate(kube_pod_container_status_restarts_total{cluster=~\"$cluster\"}[10m:1m])*60)[1h:]),\"_\",\"Total-restarts-over-time\",\"\",\"\")\r\n# or label_replace((max(rate(kube_pod_container_status_restarts_total{cluster=~\"$cluster\"}[5m:1m])*60*5) without (__name__,uid,instance,job) > 0),\"_\",\"restart\",\"\",\"\") # Base query for counting restarts\r\n",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "## Container CPU top-level health\r\n################################\r\nlabel_replace(\r\nmin(sgn( # Check for throttling > N indicating container is exceeding its CPU limits\r\n      rate(container_cpu_cfs_throttled_periods_total{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}[10m]) \r\n    / rate(container_cpu_cfs_periods_total{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}[10m])\r\n    >= 0.60) # If throttle create is greater than this percentage, we'll multiply sgn by 0.5 to show as error (or warning depending on threshold coloring)\r\n    ) # by (namespace,container) # These are commented out for top-level\r\n    * 0.0\r\nor\r\nmin(sgn( # Check for throttling > N indicating container is exceeding its CPU limits\r\n      rate(container_cpu_cfs_throttled_periods_total{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}[10m]) \r\n    / rate(container_cpu_cfs_periods_total{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}[10m])\r\n    >= 0.40) # If throttle create is greater than this percentage, we'll multiply sgn by 0.5 to show as error (or warning depending on threshold coloring)\r\n    ) # by (namespace,container) # These are commented out for top-level\r\n    * 0.5\r\nor\r\nmin( # Check to see if container is missing CPU Limits configuration\r\n    sgn(min(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",resource=\"cpu\",pod=~\"${component:raw}\"}) by (namespace,container))\r\n    or # if resource limit missing, we or to below to show namespace/container using CPU without limit as a zero to indicate red\r\n    sgn(min(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}) by (namespace,container))\r\n    # * 0 # TEMPORARILY DISABLING RED FOR MISSING LIMITS\r\n    ) #by (namespace,container) # These are commented out for top-level\r\n,\"_\",\"Container CPU Health\",\"\",\"\")",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "## Container Memory Health:\r\n###########################\r\nlabel_replace(\r\nmin( # Look for high memory utilization\r\n    sgn((\r\n        max(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}) by (namespace,container)\r\n      / min(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",resource=\"memory\",pod=~\"${component:raw}\"}) by (namespace, container)\r\n    ) >= .95) - 0.5 # show health state of 0.5 if container memory utilization >= 95%\r\n) #by (container) \r\nor\r\nmin( # Look for missing limits which we will show as 0 if missing\r\n    sgn(min(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",resource=\"memory\",pod=~\"${component:raw}\"}) by (namespace,container))\r\n    or # if resource limit missing, we or to below to show namespace/container using CPU without limit as a zero to indicate red\r\n    sgn(min(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",container!=\"\",pod=~\"${component:raw}\"}) by (namespace,container))\r\n    # * 0 # TEMPORARILY DISABLING RED FOR MISSING LIMITS\r\n) #by (container) \r\n,\"_\",\"Container Memory health\",\"\",\"\")",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "D"
        }
      ],
      "title": "Health Summary",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "max(rate(container_cpu_usage_seconds_total{namespace=~\"alice-springs|symphony-k8s-system\",container=\"\",cpu=\"total\"}[5m])*300 > 0) ": "POD CPU (max)",
              "min( # Workload ready percents (for deployment, daemonset, replicaset, and statefulset)\r\n    label_replace(label_join(\r\n        {job=\"kube-state-metrics\",namespace=~\"alice-springs|symphony-k8s-system\",\r\n         __name__=~\"kube_(deployment|daemonset|replicaset|statefulset)_status_(replicas_ready|ready_replicas|number_ready)\"}\r\n        ,\"workload\", \"\", \"deployment\", \"daemonset\", \"replicaset\", \"statefulset\")\r\n        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_status_.*\")\r\n  / label_replace(label_join(\r\n        {job=\"kube-state-metrics\",namespace=~\"alice-springs|symphony-k8s-system\",\r\n         __name__=~\"kube_(deployment|daemonset|replicaset|statefulset)_status_(replicas|desired_number_scheduled)\"}\r\n        ,\"workload\", \"\", \"deployment\", \"daemonset\", \"replicaset\", \"statefulset\")\r\n        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_status_.*\")\r\n) #by (workloadType) #namespace) #, workloadType) #, workload)": "Workload ready health"
            }
          }
        }
      ],
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 20
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 6,
        "y": 64
      },
      "id": 33,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(sum ( # by(workloadType) (\r\n#min(\r\n#  label_join( # Workload ready percents (for deployment, daemonset, and statefulset)\r\n    label_replace(label_join(\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} or\r\n        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} or\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"replicaset\", \"statefulset\")\r\n        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_status_.*\")\r\n),\"_\",\"Ready\",\"\",\"\")\r\n#  / label_replace(label_join(\r\n#        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\"$namespace\",daemonset=~\"${component:raw}\"} or\r\n#        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\"$namespace\",deployment=~\"${component:raw}\"} or\r\n#        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\"$namespace\",statefulset=~\"${component:raw}\"}\r\n#        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"statefulset\")\r\n#        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_(status|spec)_.*\")\r\n#  ,\"workload\", \":\", \"workloadType\", \"workloadName\")\r\n#) by (workload) >=0 ",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#min(\r\n#  label_join( # Workload ready percents (for deployment, daemonset, and statefulset)\r\n#    label_replace(label_join(\r\n#        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\"$namespace\",deployment=~\"${component:raw}\"} or\r\n#        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\"$namespace\",daemonset=~\"${component:raw}\"} or\r\n#        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\"$namespace\",statefulset=~\"${component:raw}\"}\r\n#        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"replicaset\", \"statefulset\")\r\n#        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_status_.*\")\r\n#  / label_replace(label_join(\r\n  label_replace(sum(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} or\r\n        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} or\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n#        ,\"workloadName\", \"\", \"deployment\", \"daemonset\", \"statefulset\")\r\n#        ,\"workloadType\", \"$1\", \"__name__\", \"kube_(.*)_(status|spec)_.*\")\r\n    ),\"_\",\"Requested\",\"\",\"\")\r\n#  ,\"workload\", \":\", \"workloadType\", \"workloadName\")\r\n#) by (workload) >=0 ",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Workloads",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Not-Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 8,
        "y": 64
      },
      "id": 35,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    sum(#sgn(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} \r\n      - kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"}\r\n      > 0)#)\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n    sum(#sgn(\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"}\r\n      )#)\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\nor label_replace(vector(0),\"status\",\"Ready\",\"\",\"\")\r\n# or label_replace(vector(1),\"status\",\"Not-Ready\",\"\",\"\") # UNCOMMENT THIS LINE TO TEST \"NOT-READY\" STATUS",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\n",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "DaemonSets",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Not-Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 10,
        "y": 64
      },
      "id": 37,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.12",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    sum(#sgn(\r\n      kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n    - kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n    > 0)#)\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n    sum(#sgn(\r\n      kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n    )#)\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\nor label_replace(vector(0),\"status\",\"Ready\",\"\",\"\") # this is to zero if no workloads of this type exist\r\n# or label_replace(vector(1),\"status\",\"Not-Ready\",\"\",\"\") # UNCOMMENT THIS LINE TO TEST \"NOT-READY\" STATUS",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\n",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "Deployments",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Not-Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ready"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 12,
        "y": 64
      },
      "id": 39,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n      sum(#sgn(\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"} \r\n      - kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n      > 0)#)\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n      sum(#sgn(\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n      )#)\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\nor \r\nlabel_replace(vector(0),\"status\",\"Ready\",\"\",\"\")\r\n# or label_replace(vector(1),\"status\",\"Not-Ready\",\"\",\"\") # UNCOMMENT THIS LINE TO TEST \"NOT-READY\" STATUS",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "label_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n      - kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      > 0)),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Not-Ready\",\"\",\"\")\r\nor \r\nlabel_replace(\r\n    label_replace(sum(sgn(\r\n        kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"deployment\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"daemonset\",\"\",\"\") or\r\n    label_replace(sum(sgn(\r\n        kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n      )),\"workload\",\"statefulset\",\"\",\"\")\r\n  ,\"status\",\"Ready\",\"\",\"\")\r\n",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "StatefulSets",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "yellow",
                "value": 1
              },
              {
                "color": "dark-orange",
                "value": 5
              },
              {
                "color": "red",
                "value": 10
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 14,
        "y": 64
      },
      "id": 41,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Container Restarts\r\nlabel_replace(ceil(sum_over_time(sum(rate(kube_pod_container_status_restarts_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\"}[10m:1m])*60)[1h:])),\"_\",\"restarts\",\"\",\"\")\r\n",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 40
              },
              {
                "color": "red",
                "value": 60
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Percent containers with CPU Limits (%)"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-purple",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CPU Usage (milli-cores)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CPU Max Throttled (%)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-orange",
                  "mode": "thresholds",
                  "seriesBy": "max"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 16,
        "y": 64
      },
      "id": 59,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.12",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# CPU Time (milli-cores version, if < 0.2 cores)\r\n(label_replace(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval]))*1000,\"_\",\"CPU Usage (milli-cores)\",\"\",\"\") )\r\n# Percent of containers with limits defined\r\nor label_replace(\r\n    count(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\",resource=\"cpu\"}) /\r\n    count(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\",cpu=\"total\"}) *100\r\n    ,\"_\",\"Percent containers with CPU Limits (%)\",\"\",\"\")\r\n# CPU Throttling:\r\nor label_replace(100*(max(\r\n        rate(container_cpu_cfs_throttled_periods_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[10m])\r\n        / rate(container_cpu_cfs_periods_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[10m])\r\n    )),\"_\",\"CPU Max Throttled (%)\",\"\",\"\")\r\n",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Shows the max in millicores, used to determine which is shown (commented out for UX; only uncomment to debug above)\r\n#or label_replace(quantile_over_time(0.95,sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\"}[$__rate_interval]))[3d:])*1000,\"_\",\"CPU Usage (milli-cores) MAX\",\"\",\"\")\r\nvector(0)>0\r\n# Sum of all limits defined, in Cores\r\nor label_replace(sum(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"}),\"_\",\"CPU Limits (cores)\",\"\",\"\")\r\n# WIP:\r\nor label_replace(\r\n    count(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"}) /\r\n    count(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",cpu=\"total\"}) *100\r\n    ,\"_\",\"WIP-PERCENT_WITH_LIMITS\",\"\",\"\")\r\nor label_replace(count(\r\n    kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"})\r\n    ,\"_\",\"WIP-NUMERATOR\",\"\",\"\")\r\nor label_replace(count(\r\n    container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",cpu=\"total\"}) #without(cluster,container,cpu,id,image,instance,job,name,namespace,pod)\r\n    ,\"_\",\"WIP-DENOMINATOR\",\"\",\"\")\r\n# ",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "CPU",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 80
              },
              {
                "color": "orange",
                "value": 85
              },
              {
                "color": "red",
                "value": 90
              },
              {
                "color": "dark-red",
                "value": 95
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Percent containers with Memory Limits (%)"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              },
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Mem Working Bytes (MB)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Mem Max Usage vs Limit (%)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-orange",
                  "mode": "thresholds",
                  "seriesBy": "max"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 64
      },
      "id": 61,
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.12",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Memory Usage (MB version)\r\n(label_replace(sum(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"})/(1024*1024),\"_\",\"Mem Working Bytes (MB)\",\"\",\"\") )\r\n# Percent containers with limits\r\nor label_replace(\r\n    count(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\",resource=\"memory\"}) /\r\n    count(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}) *100\r\n    ,\"_\",\"Percent containers with Memory Limits (%)\",\"\",\"\")\r\n# Max Mem % Usage:\r\nor label_replace(100*(max(\r\n    max_over_time((max by(container)(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}))[10m:])\r\n    / max by(container)(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\",resource=\"memory\"})\r\n    )),\"_\",\"Mem Max Usage vs Limit (%)\",\"\",\"\")\r\n",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Shows the max in millicores, used to determine which is shown (commented out for UX; only uncomment to debug above)\r\n#or label_replace(quantile_over_time(0.95,sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\"}[$__rate_interval]))[3d:])*1000,\"_\",\"CPU Usage (milli-cores) MAX\",\"\",\"\")\r\nvector(0)>0\r\n# Sum of all limits defined, in Cores\r\nor label_replace(sum(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"}),\"_\",\"CPU Limits (cores)\",\"\",\"\")\r\n# WIP:\r\nor label_replace(\r\n    count(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"}) /\r\n    count(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",cpu=\"total\"}) *100\r\n    ,\"_\",\"WIP-PERCENT_WITH_LIMITS\",\"\",\"\")\r\nor label_replace(count(\r\n    kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",resource=\"cpu\"})\r\n    ,\"_\",\"WIP-NUMERATOR\",\"\",\"\")\r\nor label_replace(count(\r\n    container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\"$namespace4workloads\",pod=~\".*\",container!=\"\",cpu=\"total\"}) #without(cluster,container,cpu,id,image,instance,job,name,namespace,pod)\r\n    ,\"_\",\"WIP-DENOMINATOR\",\"\",\"\")\r\n# ",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Memory",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "milli-cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Show details for [${__field.labels._}]",
              "url": "/d/wlCiLDq4k/health-infra-pod?${__all_variables}&${__url_time_range}&var-pod=${__field.labels._}.*"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": ".Overall"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "links"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 68
      },
      "id": 47,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# CPU Time (milli-cores version, if < 0.2 cores)\r\nmax by(_)(\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum by(pod)(rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"_\",\"$1\",\"pod\",\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") or\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum (rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"_\",\".Overall\",\"\",\"\") or\r\nvector(0)>0)",
          "legendFormat": "{{_}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "CPU Usage by Workload",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "working bytes",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Show details for [${__field.labels._}]",
              "url": "/d/wlCiLDq4k/health-infra-pod?${__all_variables}&${__url_time_range}&var-pod=${__field.labels._}.*"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byType",
              "options": "number"
            },
            "properties": [
              {
                "id": "links"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 68
      },
      "id": 48,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# CPU Time (milli-cores version, if < 0.2 cores)\r\nmax by(_)(\r\nlabel_replace(\r\n    sum by(pod)(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"})/(1024*1024),\"_\",\"$1\",\"pod\",\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") \r\n)\r\n##(label_replace(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval]))*1000,\"_\",\"CPU Usage (milli-cores)\",\"\",\"\") )\r\n##    and label_replace(max_over_time(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval]))[3d:]) < 0.2,\"_\",\"CPU Usage (milli-cores)\",\"\",\"\")) # Show milli-cores if rate below 0.2 cores\r\n# CPU Time (cores version, if >= 0.2 cores)\r\n##or (label_replace(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval])),\"_\",\"CPU Usage (cores)\",\"\",\"\") \r\n##    and label_replace(max_over_time(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval]))[3d:]) >= 0.2,\"_\",\"CPU Usage (cores)\",\"\",\"\")) # Show in cores if rate at or above 0.2 cores\r\n# Shows the max in millicores, used to determine which is shown (commented out for UX; only uncomment to debug above)\r\n#or label_replace(max_over_time(sum(rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[$__rate_interval]))[3d:])*1000,\"_\",\"CPU Usage (milli-cores) MAX\",\"\",\"\")\r\n# Sum of all limits defined, in Cores\r\n##or label_replace(sum(kube_pod_container_resource_limits{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\",resource=\"cpu\"}),\"_\",\"CPU Limits (cores)\",\"\",\"\")\r\n# CPU Throttling:\r\n##or label_replace(100*(max(\r\n##        rate(container_cpu_cfs_throttled_periods_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[10m])\r\n##        / rate(container_cpu_cfs_periods_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"}[10m])\r\n##    )),\"_\",\"CPU Max Throttled (%)\",\"\",\"\")\r\n",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Memory Usage by Workload",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Click on data series to drill down into pod details",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "milli-cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Show details for [${__field.labels.pod}]",
              "url": "/d/wlCiLDq4k/health-infra-pod?${__all_variables}&${__url_time_range}&var-pod=${__field.labels.pod}"
            }
          ],
          "mappings": [
            {
              "options": {
                "match": "null+nan",
                "result": {
                  "color": "transparent",
                  "index": 0
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": ".Overall"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 76
      },
      "id": 56,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# CPU Time (milli-cores version, if < 0.2 cores)\r\nmax by(pod)(\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum by(pod)(rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"_\",\"$1\",\"pod\",\"(.*)\") or #,\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") or\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum (rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"pod\",\".Overall\",\"\",\"\") or\r\nvector(0)>0)",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# CPU Time (milli-cores version, if < 0.2 cores)\r\nmax by(_)(\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum by(pod)(rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"_\",\"$1\",\"pod\",\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") or\r\n    label_replace(#quantile_over_time($latency_percentile,(\r\n        sum (rate(\r\n        container_cpu_usage_seconds_total{cluster=~\"$cluster\",pod=~\"${component:raw}\",container!=\"\"}\r\n        [$__rate_interval]))#)[$latency_quantile_range:])\r\n        *1000,\"_\",\".Overall\",\"\",\"\") or\r\nvector(0)>0)",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "CPU Usage by Pod",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Click on data series to drill down into pod details",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "working bytes",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Show details for [${__field.labels.pod}]",
              "url": "/d/wlCiLDq4k/health-infra-pod?${__all_variables}&${__url_time_range}&var-pod=${__field.labels.pod}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 76
      },
      "id": 57,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Memory working bytes\r\nmax by(pod)(\r\nlabel_replace(\r\n    sum by(pod)(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"})/(1024*1024),\"_\",\"$1\",\"pod\",\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") \r\n)",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Memory working bytes\r\nmax by(_)(\r\nlabel_replace(\r\n    sum by(pod)(container_memory_working_set_bytes{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\",container!=\"\"})/(1024*1024),\"_\",\"$1\",\"pod\",\"(.*)(-[0-9]$|-[0-9]$|-[^-]+-.....$)\") \r\n)",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Memory Usage by Pod",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Shows workloads which are not available",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Unavailable Replicas",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [
            {
              "options": {
                "match": "null+nan",
                "result": {
                  "color": "transparent",
                  "index": 0
                }
              },
              "type": "special"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 84
      },
      "id": 77,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(\r\n    kube_statefulset_status_replicas{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"} \r\n    - kube_statefulset_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",statefulset=~\"${component:raw}\"}\r\n    > 0\r\n) by (statefulset)",
          "hide": false,
          "legendFormat": "{{statefulset}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(\r\n    kube_deployment_spec_replicas{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"} \r\n    - kube_deployment_status_replicas_ready{cluster=~\"$cluster\",namespace=~\".*\",deployment=~\"${component:raw}\"}\r\n    > 0\r\n) by (deployment)",
          "hide": false,
          "legendFormat": "{{deployment}}",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(\r\n    kube_daemonset_status_desired_number_scheduled{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"} \r\n    - kube_daemonset_status_number_ready{cluster=~\"$cluster\",namespace=~\".*\",daemonset=~\"${component:raw}\"}\r\n    > 0\r\n) by (daemonset) ",
          "hide": false,
          "legendFormat": "{{daemonset}}",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "Workloads in Not Ready State",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "Shows workloads experiencing restarts",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Restarts",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [
            {
              "options": {
                "match": "null+nan",
                "result": {
                  "color": "transparent",
                  "index": 0
                }
              },
              "type": "special"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 84
      },
      "id": 78,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "sum(increase(kube_pod_container_status_restarts_total{cluster=~\"$cluster\",namespace=~\".*\",pod=~\"${component:raw}\"}[$__rate_interval]) > 0) by (container)",
          "hide": false,
          "legendFormat": "{{statefulset}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Workloads with Restarts",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 92
      },
      "id": 13,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Errors & Logs</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "refId": "A"
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_AZURE_MONITOR}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "yellow",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PodName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 300
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Reason"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Failed": {
                        "color": "red",
                        "index": 0
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 114
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlPu"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 200
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Message"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 94
      },
      "id": 55,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Count"
          }
        ]
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "azureLogAnalytics": {
            "query": "KubeEvents\r\n| where TimeGenerated > $__timeFrom() and TimeGenerated <= $__timeTo()\r\n| where ClusterName == '$cluster'\r\n| where Name matches regex '${component:raw}'\r\n//| order by TimeGenerated desc\r\n| order by LastSeen desc, FirstSeen desc, TimeGenerated desc\r\n| project-rename PodName = Name\r\n| project FirstSeen, LastSeen, Count, PodName, Reason, Message\r\n| take 10",
            "resources": [
              "/subscriptions/<Placeholder_SubID>"
            ],
            "resultFormat": "table"
          },
          "azureMonitor": {
            "allowedTimeGrainsMs": [],
            "timeGrain": "auto"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_AZURE_MONITOR}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Last 10 Kube Events entries (from $cluster)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 102
      },
      "id": 14,
      "links": [
        {
          "targetBlank": true,
          "title": "Open ${component_text} - Overview page",
          "url": "/d/e57b7777-71be-43a8-87bd-d917391b154f/aio-service-dp-overview?${__all_variables}&${__url_time_range}"
        }
      ],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp ${component_text} - Control Plane</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "refId": "A"
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 473
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 104
      },
      "id": 91,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Value"
          }
        ]
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_reconcile_event{cluster=\"$cluster\"}[$__range])) by (name, namespace) > 0",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        }
      ],
      "title": "Operator Reconciliations",
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 473
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 104
      },
      "id": 92,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Value"
          }
        ]
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(aio_dp_reconcile_error{cluster=\"$cluster\"}[$__range])) by (type, name, namespace, error_code) > 0",
          "format": "table",
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "A"
        }
      ],
      "title": "Operator Reconciliation Errors",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_AZURE_MONITOR}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "yellow",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "PodName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 300
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Reason"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Failed": {
                        "color": "red",
                        "index": 0
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 114
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlPu"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 200
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Message"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ContainerName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 193
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LogMessage"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 1656
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "LogSource"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "log_attributes"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 612
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 111
      },
      "id": 63,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.5.13",
      "targets": [
        {
          "azureLogAnalytics": {
            "query": "ContainerLogV2\r\n| where TimeGenerated >= $__timeFrom() and TimeGenerated <= $__timeTo()\r\n| where _ResourceId contains '$cluster'\r\n| where ContainerName == \"manager\"\r\n| where PodName contains \"aio-dp-operator\"\r\n| where LogMessage contains \"trace_id\"\r\n| extend log = parse_json(LogMessage)\r\n| extend attributes = parse_json(log[\"attributes\"])\r\n| extend attributes=bag_remove_keys(attributes, dynamic(['name', 'code.namespace', 'code.function']))\r\n| project log[\"timestamp\"], log[\"name\"], log[\"status_code\"], log[\"status_message\"], attributes",
            "resources": [
              "/subscriptions/<Placeholder_SubID>"
            ],
            "resultFormat": "table"
          },
          "azureMonitor": {
            "allowedTimeGrainsMs": [],
            "timeGrain": "auto"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_AZURE_MONITOR}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Operator Logs",
      "type": "table"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "description": "Defines the service Component this report focuses on.",
        "hide": 2,
        "name": "component",
        "query": "${VAR_COMPONENT}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_COMPONENT}",
          "text": "${VAR_COMPONENT}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_COMPONENT}",
            "text": "${VAR_COMPONENT}",
            "selected": false
          }
        ]
      },
      {
        "description": "Defines the service Component this report focuses on.",
        "hide": 2,
        "name": "component_text",
        "query": "${VAR_COMPONENT_TEXT}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_COMPONENT_TEXT}",
          "text": "${VAR_COMPONENT_TEXT}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_COMPONENT_TEXT}",
            "text": "${VAR_COMPONENT_TEXT}",
            "selected": false
          }
        ]
      },
      {
        "current": {
          "selected": false,
          "text": "Managed_Prometheus_jajens-azmonworkspace-test",
          "value": "Managed_Prometheus_jajens-azmonworkspace-test"
        },
        "hide": 1,
        "includeAll": false,
        "multi": false,
        "name": "prometheus",
        "options": [],
        "query": "prometheus",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
        },
        "definition": "kube_node_status_condition",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "cluster",
        "options": [],
        "query": {
          "query": "kube_node_status_condition",
          "refId": "StandardVariableQuery"
        },
        "refresh": 2,
        "regex": "/.*cluster=\"([^\"]*).*/",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
        },
        "definition": "kube_namespace_status_phase{cluster=~\"$cluster\", phase!~\"terminating\"}",
        "hide": 2,
        "includeAll": true,
        "multi": true,
        "name": "namespace",
        "options": [],
        "query": {
          "query": "kube_namespace_status_phase{cluster=~\"$cluster\", phase!~\"terminating\"}",
          "refId": "StandardVariableQuery"
        },
        "refresh": 2,
        "regex": "/.*namespace=\"([^\"]*).*/",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "description": "Pipeline RegEx for the self-test pipeline",
        "hide": 2,
        "name": "aio_dp_self_test_pipeline",
        "query": "${VAR_AIO_DP_SELF_TEST_PIPELINE}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_AIO_DP_SELF_TEST_PIPELINE}",
          "text": "${VAR_AIO_DP_SELF_TEST_PIPELINE}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_AIO_DP_SELF_TEST_PIPELINE}",
            "text": "${VAR_AIO_DP_SELF_TEST_PIPELINE}",
            "selected": false
          }
        ]
      },
      {
        "hide": 2,
        "name": "latency_percentile",
        "query": "${VAR_LATENCY_PERCENTILE}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_LATENCY_PERCENTILE}",
          "text": "${VAR_LATENCY_PERCENTILE}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_LATENCY_PERCENTILE}",
            "text": "${VAR_LATENCY_PERCENTILE}",
            "selected": false
          }
        ]
      },
      {
        "auto": true,
        "auto_count": 300,
        "auto_min": "5m",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_latency_quantile_range"
        },
        "hide": 2,
        "name": "latency_quantile_range",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_latency_quantile_range"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "15m",
            "value": "15m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "3h",
            "value": "3h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "24h",
            "value": "24h"
          }
        ],
        "query": "5m,10m,15m,1h,3h,6h,24h",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "hide": 2,
        "name": "aio_dp_nats_utilization_threshold",
        "query": "${VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD}",
          "text": "${VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD}",
            "text": "${VAR_AIO_DP_NATS_UTILIZATION_THRESHOLD}",
            "selected": false
          }
        ]
      },
      {
        "hide": 2,
        "name": "aio_dp_latency_threshold_ms",
        "query": "${VAR_AIO_DP_LATENCY_THRESHOLD_MS}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_AIO_DP_LATENCY_THRESHOLD_MS}",
          "text": "${VAR_AIO_DP_LATENCY_THRESHOLD_MS}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_AIO_DP_LATENCY_THRESHOLD_MS}",
            "text": "${VAR_AIO_DP_LATENCY_THRESHOLD_MS}",
            "selected": false
          }
        ]
      },
      {
        "hide": 2,
        "name": "aio_dp_error_rate",
        "query": "${VAR_AIO_DP_ERROR_RATE}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_AIO_DP_ERROR_RATE}",
          "text": "${VAR_AIO_DP_ERROR_RATE}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_AIO_DP_ERROR_RATE}",
            "text": "${VAR_AIO_DP_ERROR_RATE}",
            "selected": false
          }
        ]
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "aio-health-service-dp",
  "uid": "e7f4802e-d73b-4f06-a84c-715cdc42fb36",
  "version": 79,
  "weekStart": ""
}