{
  "__inputs": [
    {
      "name": "DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST",
      "label": "Managed_Prometheus_jajens-azmonworkspace-test",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "VAR_NODETHRESHOLDRED",
      "type": "constant",
      "label": "nodeThresholdRed",
      "value": "90",
      "description": ""
    },
    {
      "name": "VAR_NODETHRESHOLDYELLOW",
      "type": "constant",
      "label": "nodeThresholdYellow",
      "value": "80",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.5.13"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "Managed Prometheus - AKS Node Report",
      "tooltip": "",
      "type": "link",
      "url": "/d/D4pVs6738/node-exporter-nodes"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 5,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div style=\"background-color:#283747\">\n  <span style=\"color:#FFFFF8; font-size:28px\">Azure Edge Services - Infrastructure Cluster Health</span>\n</div>\n<div style=\"background-color:#595959; text-align: left\"> \n  <span style=\"color:white; font-size:18px\">&nbsp Node Health</span>\n</div>\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 15,
        "x": 0,
        "y": 3
      },
      "id": 1,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Node Health Status\r\n####################\r\n# RED (0) if no nodes ready without pressure\r\n# YELLOW (0.5) if at least one node not ready or with pressure\r\n# Green (1.0) otherwise\r\n#label_replace(\r\nmax by (node) (kube_node_status_condition{cluster=~\"$cluster\",condition=\"ready\",status=\"false\"} > 0) * 0 or\r\nmax by (node) (kube_node_status_condition{cluster=~\"$cluster\",condition!=\"ready\",status=\"true\"} > 0) * 0.5 or\r\nmax by (node) (kube_node_status_condition{cluster=~\"$cluster\",condition=\"ready\",status=\"true\"} > 0) * 1\r\n#) / sum(kube_node_info)#  ,\"_\",\"Node Health\",\"\",\"\")\r\n#or label_replace(sum(kube_node_info),\"_\",\"Node Total Count\",\"\",\"\")\r\n#or label_replace(sum(kube_node_status_condition{condition=\"Ready\",status=\"true\"}),\"_\",\"Node Ready Count\",\"\",\"\")\r\n#or label_replace( sum(max by (node) (kube_node_status_condition{condition!=\"Ready\",status=\"true\"})),\"_\", \"Node Pressure Count\",\"\",\"\")\r\n#or label_replace(max by (node) (kube_node_status_condition{condition=\"Ready\",status=\"false\"}),\"_\",\"Node Ready Count\",\"\",\"\")\r\n#or label_replace(max by (node) (kube_node_status_condition{condition!=\"Ready\",status=\"true\"}),\"_\", \"Node Pressure Count\",\"\",\"\")\r\n#or label_replace(sum(sgn(\r\n#   max by (node) (kube_node_status_condition{condition=\"Ready\",status=\"false\"})\r\n# + max by (node) (kube_node_status_condition{condition!=\"Ready\",status=\"true\"})\r\n#  )),\"_\",\"Unhealthy Node Count\",\"\",\"\")",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Node Ready Health",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 2,
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "# Ready"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "line"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 9,
        "x": 15,
        "y": 3
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# Node Health Details\r\n####################\r\nlabel_replace(sum (kube_node_status_condition{cluster=~\"$cluster\",condition=\"Ready\",status=\"true\"}),\"_\",\"# Ready\",\"\",\"\") or\r\nmax by(_)(label_replace(label_join(\r\n  label_replace(max by (node,condition) (kube_node_status_condition{cluster=~\"$cluster\",condition=\"Ready\",status=\"false\"}), \"condition\",\"Not Ready\",\"\",\"\") > 0\r\n  or max by (node,condition) (kube_node_status_condition{cluster=~\"$cluster\",condition!=\"Ready\",status=\"true\"}) > 0\r\n  ,\"_\",\":\",\"condition\",\"node\")\r\n  ,\"_\",\"$1($2)\",\"_\",\"([^:]*):(.*)\")\r\n) \r\n",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "# X-axis normalizer\r\nmin(kube_node_status_condition{cluster=~\"$cluster\",condition=\"Ready\"})",
          "hide": true,
          "interval": "15m",
          "legendFormat": "_",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Node Ready Health Issue Details",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / Nodes",
              "url": "/d/D4pVs6738/node-exporter-nodes?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels._}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / USE Method / Node",
              "url": "/d/t5aja6738/node-exporter-use-method-node?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels._}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Compute Resources / Node (Pods)",
              "url": "/d/200ac8fdbfbb74b39aff88118e4d6738/kubernetes-compute-resources-node-pods?${__url_time_range}&${cluster:queryparam}﻿&var-node=${__field.labels._}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#808080",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 15,
        "x": 0,
        "y": 8
      },
      "id": 8,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node CPU Health\r\nmin by(_)(label_replace(vector(0)>0\r\n    or 0.0 * sgn(\r\n        100 - ((avg by (instance) (rate(node_cpu_seconds_total{cluster=~\"$cluster\",mode=\"idle\"}[5m])) \r\n              + avg by (instance) (rate(node_cpu_seconds_total{cluster=~\"$cluster\",mode=\"iowait\"}[5m]))\r\n        ) * 100) > $nodeThresholdRed)\r\n    or 0.5 * sgn(\r\n        100 - ((avg by (instance) (rate(node_cpu_seconds_total{cluster=~\"$cluster\",mode=\"idle\"}[5m])) \r\n              + avg by (instance) (rate(node_cpu_seconds_total{cluster=~\"$cluster\",mode=\"iowait\"}[5m]))\r\n        ) * 100) > $nodeThresholdYellow)\r\n    or 1.0 * sgn(sum by (instance)(node_cpu_seconds_total{cluster=~\"$cluster\"} > 0))\r\n    or -1 * sgn(max by (instance) (label_replace(kube_node_info{cluster=~\"$cluster\"},\"instance\",\"$1\",\"node\",\"(.*)\")))\r\n    ,\"_\",\"$1\",\"instance\",\"(.*)\"))",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node CPU Health\r\nmax by (node) (kube_node_info{cluster=\"$cluster\"}) * 0 and\r\nmax by (node) (label_replace(\r\n  100 - ((avg by (instance) (rate(node_cpu_seconds_total{cluster=\"$cluster\",mode=\"idle\"}[5m])) \r\n        + avg by (instance) (rate(node_cpu_seconds_total{cluster=\"$cluster\",mode=\"iowait\"}[5m]))\r\n  ) * 100)\r\n  #* on (instance) group_left(node) label_replace(max by(internal_ip,node) (kube_node_info),\"instance\",\"$1:9100\",\"internal_ip\",\"(.*)\") # Node Info\r\n  ,\"node\",\"$1\",\"instance\",\"(.*)\")\r\n> 50 # THRESHOLD VALUE FOR RED\r\n# Show -1 if node_cpu_seconds_total metric is missing for the node\r\n) or sgn(max by (node) (kube_node_info{cluster=\"$cluster\"})) * -1 unless \r\n  count by(node)(label_replace(node_cpu_seconds_total{cluster=\"$cluster\"},\"node\",\"$1\",\"instance\",\"(.*)\"))\r\nor max by (node) (kube_node_info{cluster=\"$cluster\"}) # Baseline by node",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Node CPU Health",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Unhealthy"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Warning"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 9,
        "x": 15,
        "y": 8
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node CPU Usage Pecent\r\nmax by (_) (label_replace(\r\n  100 - ((avg by (instance) (rate(node_cpu_seconds_total{cluster=\"$cluster\",mode=\"idle\"}[5m])) \r\n        + avg by (instance) (rate(node_cpu_seconds_total{cluster=\"$cluster\",mode=\"iowait\"}[5m]))\r\n  ) * 100)\r\n  #* on (instance) group_left(node) label_replace(max by(internal_ip,node) (kube_node_info),\"instance\",\"$1:9100\",\"internal_ip\",\"(.*)\") # Node Info\r\n  ,\"_\",\"$1\",\"instance\",\"(.*)\")\r\n)\r\nor label_replace(vector($nodeThresholdRed),\"_\",\"Unhealthy\",\"\",\"\")\r\nor label_replace(vector($nodeThresholdYellow),\"_\",\"Warning\",\"\",\"\")",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Node CPU Utilization",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / Nodes",
              "url": "/d/D4pVs6738/node-exporter-nodes?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels._}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / USE Method / Node",
              "url": "/d/t5aja6738/node-exporter-use-method-node?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels._}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Compute Resources / Node (Pods)",
              "url": "/d/200ac8fdbfbb74b39aff88118e4d6738/kubernetes-compute-resources-node-pods?${__url_time_range}&${cluster:queryparam}﻿&var-node=${__field.labels._}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#808080",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 15,
        "x": 0,
        "y": 13
      },
      "id": 10,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node Memory Health\r\nmin by(_)(label_replace(vector(0)>0\r\n    or 0.0 * sgn(\r\n        (100 * sum by (instance)(node_memory_MemTotal_bytes{cluster=~\"$cluster\"} - (node_memory_MemFree_bytes{cluster=~\"$cluster\"} + node_memory_Buffers_bytes{cluster=~\"$cluster\"} + node_memory_Cached_bytes{cluster=~\"$cluster\"})) / sum by(instance) (node_memory_MemTotal_bytes{cluster=~\"$cluster\"})) > $nodeThresholdRed)\r\n    or 0.5 * sgn(\r\n        (100 * sum by (instance)(node_memory_MemTotal_bytes{cluster=~\"$cluster\"} - (node_memory_MemFree_bytes{cluster=~\"$cluster\"} + node_memory_Buffers_bytes{cluster=~\"$cluster\"} + node_memory_Cached_bytes{cluster=~\"$cluster\"})) / sum by(instance) (node_memory_MemTotal_bytes{cluster=~\"$cluster\"})) > $nodeThresholdYellow)\r\n    or 1.0 * sgn(sum by (instance)(node_memory_MemTotal_bytes{cluster=~\"$cluster\"} > 0))\r\n    or -1 * sgn(max by (instance) (label_replace(kube_node_info{cluster=~\"$cluster\"},\"instance\",\"$1\",\"node\",\"(.*)\")))\r\n,\"_\",\"$1\",\"instance\",\"(.*)\"))\r\n",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node Memory Health\r\nmax by (node) (kube_node_info{cluster=\"$cluster\"}) * 0 and (\r\n  min by (node) (label_replace(\r\n    (100 * sum by (instance)\r\n      (node_memory_MemTotal_bytes{cluster=\"$cluster\"} \r\n      - node_memory_MemFree_bytes{cluster=\"$cluster\"} \r\n      - node_memory_Buffers_bytes{cluster=\"$cluster\"} \r\n      - node_memory_Cached_bytes{cluster=\"$cluster\"}) \r\n    / sum by(instance) (node_memory_MemTotal_bytes{cluster=\"$cluster\"}))\r\n    #* on (instance) group_left(node) label_replace(\r\n    #  max by(internal_ip,node) (kube_node_info),\"instance\",\"$1:9100\",\"internal_ip\",\"(.*)\") # Node Info\r\n  ,\"node\",\"$1\",\"instance\",\"(.*)\")\r\n  )\r\n> 50 # THRESHOLD VALUE FOR RED\r\n) or sgn(max by (node) (kube_node_info{cluster=\"$cluster\"})) * -1 unless \r\n  count by(node)(label_replace(node_memory_MemTotal_bytes{cluster=\"$cluster\"},\"node\",\"$1\",\"instance\",\"(.*)\"))\r\nor max by (node) (kube_node_info{cluster=\"$cluster\"}) # Baseline by node\r\n",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Node Memory Health",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Unhealthy"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Warning"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 9,
        "x": 15,
        "y": 13
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Node Memory Usage Pecent\r\nmin by (_) (label_replace(\r\n  (100 * sum by (instance)\r\n    (node_memory_MemTotal_bytes{cluster=\"$cluster\"} \r\n    - node_memory_MemFree_bytes{cluster=\"$cluster\"} \r\n    - node_memory_Buffers_bytes{cluster=\"$cluster\"} \r\n    - node_memory_Cached_bytes{cluster=\"$cluster\"}) \r\n  / sum by(instance) (node_memory_MemTotal_bytes{cluster=\"$cluster\"}))\r\n    ,\"_\",\"$1\",\"instance\",\"(.*)\")\r\n)\r\nor label_replace(vector($nodeThresholdRed),\"_\",\"Unhealthy\",\"\",\"\")\r\nor label_replace(vector($nodeThresholdYellow),\"_\",\"Warning\",\"\",\"\")",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Node Memory Utilization",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "lineWidth": 0,
            "spanNulls": false
          },
          "links": [
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / Nodes",
              "url": "/d/D4pVs6738/node-exporter-nodes?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels.node}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Node Exporter / USE Method / Node",
              "url": "/d/t5aja6738/node-exporter-use-method-node?${__url_time_range}&${cluster:queryparam}﻿&var-instance=${__field.labels.node}"
            },
            {
              "targetBlank": true,
              "title": "AKS Reports - K8s / Compute Resources / Node (Pods)",
              "url": "/d/200ac8fdbfbb74b39aff88118e4d6738/kubernetes-compute-resources-node-pods?${__url_time_range}&${cluster:queryparam}﻿&var-node=${__field.labels.node}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#808080",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "yellow",
                "value": 0.5
              },
              {
                "color": "green",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 15,
        "x": 0,
        "y": 18
      },
      "id": 12,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mergeValues": false,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Disk Usage Health\r\nmin by(node)(label_replace(vector(0)>0\r\n  or 0.0 * sgn(max by(instance) (100 - (100 * node_filesystem_avail_bytes{cluster=~\"$cluster\"} \r\n            / node_filesystem_size_bytes{cluster=~\"$cluster\"}) > 10) > $nodeThresholdRed)\r\n  or 0.5 * sgn(max by(instance) (100 - (100 * node_filesystem_avail_bytes{cluster=~\"$cluster\"} \r\n            / node_filesystem_size_bytes{cluster=~\"$cluster\"}) > 10) > $nodeThresholdYellow)\r\n  or 1.0 * sgn(max by(instance) (100 - (100 * node_filesystem_avail_bytes{cluster=~\"$cluster\"} \r\n            / node_filesystem_size_bytes{cluster=~\"$cluster\"})))\r\n,\"node\",\"$1\",\"instance\",\"(.*)\"))\r\nor max by (node) (kube_node_info{cluster=\"$cluster\"}) * -1 # Baseline by node",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Disk Usage Health\r\nmax by (node) (kube_node_info{cluster=\"$cluster\"}) * 0 and (\r\n  max by (node) (label_replace( #,device) (\r\n    min by(instance,device) (100 - (100 * node_filesystem_avail_bytes{cluster=\"$cluster\"} / node_filesystem_size_bytes{cluster=\"$cluster\"}) > 5)\r\n    #  * on (instance) group_left(node) label_replace(max by(internal_ip,node) (kube_node_info),\"instance\",\"$1:9100\",\"internal_ip\",\"(.*)\") # Node Info\r\n  ,\"node\",\"$1\",\"instance\",\"(.*)\")\r\n  )\r\n# or label_replace(vector(60),\"threshold\",\"redline\",\"\",\"\")\r\n> 60 # THRESHOLD VALUE FOR RED\r\n) or sgn(max by (node) (kube_node_info{cluster=\"$cluster\"})) * -1 unless \r\n  count by(node)(label_replace(node_filesystem_avail_bytes{cluster=\"$cluster\"},\"node\",\"$1\",\"instance\",\"(.*)\"))\r\nor max by (node) (kube_node_info{cluster=\"$cluster\"}) # Baseline by node",
          "hide": true,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Node Disk Health",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Unhealthy"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Warning"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 9,
        "x": 15,
        "y": 18
      },
      "id": 11,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
          },
          "editorMode": "code",
          "expr": "#############################\r\n# Disk Usage\r\nmax by(_) (label_replace(label_join(\r\n  max by (node,device) (label_replace(\r\n    min by(instance,device) (100 - (100 * node_filesystem_avail_bytes{cluster=\"$cluster\"} / node_filesystem_size_bytes{cluster=\"$cluster\"}) > 10)\r\n      ,\"node\",\"$1\",\"instance\",\"(.*)\")\r\n  ),\"nodeDevice\",\",\",\"node\",\"device\")\r\n  ,\"_\",\"$1($2)\",\"nodeDevice\",\"^([^,]+)[,](.*)$\")\r\n)\r\nor label_replace(vector($nodeThresholdRed),\"_\",\"Unhealthy\",\"\",\"\")\r\nor label_replace(vector($nodeThresholdYellow),\"_\",\"Warning\",\"\",\"\")",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Node Disk Utilization",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 13,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# How to use this dashboard\nThis dashboard highlights cluster-level health signals that may\naffect Azure Edge Services health and is broken down into the\nfollowing sections:\n\n#### Node health\nThis section breaks down Node health starting with Node \nReadiness/pressure signals to health by resource.  The left side\nshows basic health signal where YELLOW and RED indicate when a node\nhas crossed corresponding thresholds.  The right side provides a \nmore detailed view behind the health signal shown on the left.\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.5.13",
      "type": "text"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Managed_Prometheus_jajens-azmonworkspace-test",
          "value": "Managed_Prometheus_jajens-azmonworkspace-test"
        },
        "hide": 1,
        "includeAll": false,
        "multi": false,
        "name": "prometheus",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
        },
        "definition": "kube_node_status_condition",
        "description": "PAS Cluster to view",
        "hide": 0,
        "includeAll": false,
        "label": "Cluster",
        "multi": false,
        "name": "cluster",
        "options": [],
        "query": {
          "query": "kube_node_status_condition",
          "refId": "StandardVariableQuery"
        },
        "refresh": 2,
        "regex": "/.*cluster=\"([^\"]*).*/",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_MANAGED_PROMETHEUS_JAJENS-AZMONWORKSPACE-TEST}"
        },
        "definition": "kube_namespace_status_phase{cluster=~\"$cluster\", phase!~\"terminating\"}",
        "description": "Used by other dashboards, but not used here except perhaps for drilldowns to other dashboards.",
        "hide": 2,
        "includeAll": false,
        "multi": true,
        "name": "namespace",
        "options": [],
        "query": {
          "query": "kube_namespace_status_phase{cluster=~\"$cluster\", phase!~\"terminating\"}",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/.*namespace=\"([^\"]*).*/",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "description": "Threshold in percent (1-100) for determining red/error health state for node-level resources",
        "hide": 2,
        "name": "nodeThresholdRed",
        "query": "${VAR_NODETHRESHOLDRED}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_NODETHRESHOLDRED}",
          "text": "${VAR_NODETHRESHOLDRED}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_NODETHRESHOLDRED}",
            "text": "${VAR_NODETHRESHOLDRED}",
            "selected": false
          }
        ]
      },
      {
        "description": "Threshold in percent (1-100) for determining yellow/warning health state for node-level resources",
        "hide": 2,
        "name": "nodeThresholdYellow",
        "query": "${VAR_NODETHRESHOLDYELLOW}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_NODETHRESHOLDYELLOW}",
          "text": "${VAR_NODETHRESHOLDYELLOW}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_NODETHRESHOLDYELLOW}",
            "text": "${VAR_NODETHRESHOLDYELLOW}",
            "selected": false
          }
        ]
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "aio-health-infra-cluster",
  "uid": "e159191f-81f2-4443-af47-fe7cd4da23f8",
  "version": 31,
  "weekStart": ""
}