{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "11919718419833561801"
    }
  },
  "definitions": {
    "_1.AdvancedConfig": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "train": {
              "type": "string",
              "nullable": true
            }
          },
          "nullable": true
        },
        "aio": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "train": {
              "type": "string",
              "nullable": true
            },
            "configurationSettingsOverride": {
              "type": "object",
              "nullable": true
            }
          },
          "nullable": true
        },
        "secretSyncController": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "train": {
              "type": "string",
              "nullable": true
            }
          },
          "nullable": true
        },
        "observability": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "bool",
              "nullable": true
            },
            "otelCollectorAddress": {
              "type": "string",
              "nullable": true
            },
            "otelExportIntervalSeconds": {
              "type": "int",
              "nullable": true
            }
          },
          "nullable": true
        },
        "openServiceMesh": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "train": {
              "type": "string",
              "nullable": true
            }
          },
          "nullable": true
        },
        "edgeStorageAccelerator": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "nullable": true
            },
            "train": {
              "type": "string",
              "nullable": true
            },
            "diskStorageClass": {
              "type": "string",
              "nullable": true
            },
            "faultToleranceEnabled": {
              "type": "bool",
              "nullable": true
            }
          },
          "nullable": true
        },
        "resourceSuffix": {
          "type": "string",
          "nullable": true
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.BrokerConfig": {
      "type": "object",
      "properties": {
        "frontendReplicas": {
          "type": "int",
          "nullable": true,
          "minValue": 1,
          "maxValue": 16,
          "metadata": {
            "description": "Number of AIO Broker frontend replicas. The default is 2."
          }
        },
        "frontendWorkers": {
          "type": "int",
          "nullable": true,
          "minValue": 1,
          "maxValue": 16,
          "metadata": {
            "description": "Number of AIO Broker frontend workers. The default is 2."
          }
        },
        "backendRedundancyFactor": {
          "type": "int",
          "nullable": true,
          "minValue": 1,
          "maxValue": 5,
          "metadata": {
            "description": "The AIO Broker backend redundancy factory. The default is 2."
          }
        },
        "backendWorkers": {
          "type": "int",
          "nullable": true,
          "minValue": 1,
          "maxValue": 16,
          "metadata": {
            "description": "Number of AIO Broker backend workers. The default is 2."
          }
        },
        "backendPartitions": {
          "type": "int",
          "nullable": true,
          "minValue": 1,
          "maxValue": 16,
          "metadata": {
            "description": "Number of AIO Broker backend partitions. The default is 2."
          }
        },
        "memoryProfile": {
          "type": "string",
          "allowedValues": [
            "High",
            "Low",
            "Medium",
            "Tiny"
          ],
          "nullable": true,
          "metadata": {
            "description": "The AIO Broker memory profile. The default is \"Medium\"."
          }
        },
        "serviceType": {
          "type": "string",
          "allowedValues": [
            "ClusterIp",
            "LoadBalancer",
            "NodePort"
          ],
          "nullable": true,
          "metadata": {
            "description": "The AIO Broker service type. The default is \"ClusterIp\"."
          }
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.CustomerManaged": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "allowedValues": [
            "CustomerManaged"
          ]
        },
        "settings": {
          "$ref": "#/definitions/_1.TrustBundleSettings"
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.SelfSigned": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "allowedValues": [
            "SelfSigned"
          ]
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.TrustBundleSettings": {
      "type": "object",
      "properties": {
        "issuerName": {
          "type": "string"
        },
        "issuerKind": {
          "type": "string",
          "allowedValues": [
            "ClusterIssuer",
            "Issuer"
          ]
        },
        "configMapName": {
          "type": "string"
        },
        "configMapKey": {
          "type": "string"
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.TrustConfig": {
      "type": "object",
      "discriminator": {
        "propertyName": "source",
        "mapping": {
          "SelfSigned": {
            "$ref": "#/definitions/_1.SelfSigned"
          },
          "CustomerManaged": {
            "$ref": "#/definitions/_1.CustomerManaged"
          }
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    }
  },
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing arc-enabled cluster where AIO will be deployed."
      }
    },
    "trustConfig": {
      "$ref": "#/definitions/_1.TrustConfig",
      "defaultValue": {
        "source": "SelfSigned"
      },
      "metadata": {
        "description": "Trust bundle config for AIO."
      }
    },
    "advancedConfig": {
      "$ref": "#/definitions/_1.AdvancedConfig",
      "defaultValue": {},
      "metadata": {
        "description": "Advanced Configuration for development"
      }
    }
  },
  "variables": {
    "VERSIONS": {
      "platform": "0.7.11",
      "secretStore": "0.8.2",
      "containerStorage": "2.3.2"
    },
    "TRAINS": {
      "platform": "preview",
      "secretStore": "preview",
      "containerStorage": "stable"
    },
    "faultTolerantStorageClass": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'diskStorageClass'), 'acstor-arccontainerstorage-storage-pool')]",
    "nonFaultTolerantStorageClass": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'diskStorageClass'), 'default,local-path')]",
    "kubernetesStorageClass": "[if(equals(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'faultToleranceEnabled'), true()), variables('faultTolerantStorageClass'), variables('nonFaultTolerantStorageClass'))]"
  },
  "resources": {
    "cluster": {
      "existing": true,
      "type": "Microsoft.Kubernetes/connectedClusters",
      "apiVersion": "2021-03-01",
      "name": "[parameters('clusterName')]"
    },
    "aio_platform_extension": {
      "type": "Microsoft.KubernetesConfiguration/extensions",
      "apiVersion": "2023-05-01",
      "scope": "[format('Microsoft.Kubernetes/connectedClusters/{0}', parameters('clusterName'))]",
      "name": "azure-iot-operations-platform",
      "properties": {
        "extensionType": "microsoft.iotoperations.platform",
        "version": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'platform'), 'version'), variables('VERSIONS').platform)]",
        "releaseTrain": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'platform'), 'train'), variables('TRAINS').platform)]",
        "autoUpgradeMinorVersion": false,
        "scope": {
          "cluster": {
            "releaseNamespace": "cert-manager"
          }
        },
        "configurationSettings": {
          "installCertManager": "[if(equals(parameters('trustConfig').source, 'SelfSigned'), 'true', 'false')]",
          "installTrustManager": "[if(equals(parameters('trustConfig').source, 'SelfSigned'), 'true', 'false')]"
        }
      }
    },
    "secret_store_extension": {
      "type": "Microsoft.KubernetesConfiguration/extensions",
      "apiVersion": "2023-05-01",
      "scope": "[format('Microsoft.Kubernetes/connectedClusters/{0}', parameters('clusterName'))]",
      "name": "azure-secret-store",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "extensionType": "microsoft.azure.secretstore",
        "version": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'secretSyncController'), 'version'), variables('VERSIONS').secretStore)]",
        "releaseTrain": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'secretSyncController'), 'train'), variables('TRAINS').secretStore)]",
        "autoUpgradeMinorVersion": false,
        "configurationSettings": {
          "rotationPollIntervalInSeconds": "120",
          "validatingAdmissionPolicies.applyPolicies": "false"
        }
      },
      "dependsOn": [
        "aio_platform_extension"
      ]
    },
    "container_storage_extension": {
      "type": "Microsoft.KubernetesConfiguration/extensions",
      "apiVersion": "2023-05-01",
      "scope": "[format('Microsoft.Kubernetes/connectedClusters/{0}', parameters('clusterName'))]",
      "name": "azure-arc-containerstorage",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "extensionType": "microsoft.arc.containerstorage",
        "autoUpgradeMinorVersion": false,
        "version": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'version'), variables('VERSIONS').containerStorage)]",
        "releaseTrain": "[coalesce(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'train'), variables('TRAINS').containerStorage)]",
        "configurationSettings": "[union(createObject('edgeStorageConfiguration.create', 'true', 'feature.diskStorageClass', variables('kubernetesStorageClass')), if(equals(tryGet(tryGet(parameters('advancedConfig'), 'edgeStorageAccelerator'), 'faultToleranceEnabled'), true()), createObject('acstorConfiguration.create', 'true', 'acstorConfiguration.properties.diskMountPoint', '/mnt'), createObject()))]"
      },
      "dependsOn": [
        "aio_platform_extension"
      ]
    }
  },
  "outputs": {
    "clExtensionIds": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "value": [
        "[extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/extensions', 'azure-iot-operations-platform')]",
        "[extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/extensions', 'azure-secret-store')]"
      ]
    },
    "extensions": {
      "type": "object",
      "value": {
        "platform": {
          "name": "azure-iot-operations-platform",
          "id": "[extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/extensions', 'azure-iot-operations-platform')]",
          "version": "[reference('aio_platform_extension').version]",
          "releaseTrain": "[reference('aio_platform_extension').releaseTrain]"
        },
        "secretStore": {
          "name": "azure-secret-store",
          "id": "[extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/extensions', 'azure-secret-store')]",
          "version": "[reference('secret_store_extension').version]",
          "releaseTrain": "[reference('secret_store_extension').releaseTrain]"
        },
        "containerStorage": {
          "name": "azure-arc-containerstorage",
          "id": "[extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/extensions', 'azure-arc-containerstorage')]",
          "version": "[reference('container_storage_extension').version]",
          "releaseTrain": "[reference('container_storage_extension').releaseTrain]"
        }
      }
    }
  }
}